name: CI/CD Pipeline - Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm ci

    - name: Run Backend Tests
      working-directory: ./backend
      run: npm test

    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build

    - name: Upload Frontend Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: ./frontend/dist

    - name: Upload Backend Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: backend-files
        path: ./backend

  deploy-production:
    needs: test-and-build
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Download Frontend Build Artifacts
      uses: actions/download-artifact@v3
      with:
        name: frontend-build
        path: ./frontend-build

    - name: Download Backend Artifacts
      uses: actions/download-artifact@v3
      with:
        name: backend-files
        path: ./backend

    - name: Deploy Frontend to Vercel (Production)
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_FRONTEND }}
        working-directory: ./frontend-build
        vercel-args: '--prod'

    - name: Deploy Backend to Render (Production)
      uses: JorgeLNJunior/render-deploy@v1.4.3
      with:
        service_id: ${{ secrets.RENDER_SERVICE_ID_BACKEND_PROD }}
        api_key: ${{ secrets.RENDER_API_KEY }}
        clear_cache: true
